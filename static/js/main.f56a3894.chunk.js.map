{"version":3,"sources":["serviceWorker.js","layout/components/TopBar.js","layout/components/SideBar.js","notes/redux/index.js","styled/index.js","notes/components/NoteEditor.js","notes/containers/TakeANoteBox.js","notes/components/NoteBox.js","layout/components/MainPane.js","layout/theme.js","reducers.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","TopBarWrapper","styled","div","props","theme","background","shadow","secondaryTextColor","TopBarIconWrapper","secondaryBackground","AppIconWrapper","AppLogoWrapper","TopBar","aria-label","onClick","onSidebarButtonClicked","SideBarWrapper","SideBar","CREATE","defaultReducer","state","reducers","action","concat","payload","noteReducers","type","IconWrapper","textColor","UndoIcon","RedoIcon","ActionButton","button","AddNoteWrapper","TitleInput","input","color","Actions","Footer","forwardRef","ref","hideTitle","hideFooter","closeAction","useState","EditorState","createEmpty","editorState","setEditorState","editor","useRef","wrapper","title","useImperativeHandle","getNoteContent","content","getCurrentContent","titleContent","current","value","undefined","hasText","convertToRaw","clearContent","element","placeholder","ariaLabel","onChange","undo","redo","connect","_state","dispatch","updateNote","createNote","isFocused","setFocused","editorRef","close","e","stopPropagation","handleClickOutsideWrapper","event","contains","target","useEffect","document","addEventListener","removeEventListener","MainPaneWrapper","MainPane","TakeANoteBox","sidebarSize","combineReducers","notes","store","createStore","devToolsEnhancer","AppWrapper","isSidebarOpen","App","isSidebarVisible","setSidebarVisible","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f56a3894.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdMenu, MdLightbulbOutline } from 'react-icons/md';\n\nexport const TopBarWrapper = styled.div `\n  position: fixed;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  background-color: ${props => props.theme.background};\n  z-index: 100;\n  padding: 10px 15px;\n  box-shadow: ${props => props.theme.shadow};\n  color: ${props=> props.theme.secondaryTextColor};\n`;\n\nconst TopBarIconWrapper = styled.div `\n  display: inline-flex;\n  font-size: 1.5em;\n  color: ${props=> props.theme.secondaryTextColor};\n  padding: 10px;\n  border-radius: 50%;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${props=> props.theme.secondaryBackground};\n  }\n`;\n\nconst AppIconWrapper = styled.div `\n  display: inline-flex;\n  padding: 5px;\n  background-color: #f1b003;\n  color: #fff;\n  margin: 0px 10px;\n  border-radius: 5px;\n`;\n\nconst AppLogoWrapper = styled.div `\n  display: inline-flex;\n  align-items: center;\n  font-size: 1.5em;\n  margin: 0px 10px;\n  cursor: default;\n`;\n\nexport default function TopBar(props) {\n  return <TopBarWrapper>\n    <TopBarIconWrapper aria-label=\"Sidebar Toggle Button\" onClick= {() => props.onSidebarButtonClicked()}>\n      <MdMenu />\n    </TopBarIconWrapper>\n    <AppLogoWrapper>\n      <AppIconWrapper>\n        <MdLightbulbOutline/>\n      </AppIconWrapper>\n      MyKeep\n    </AppLogoWrapper>\n  </TopBarWrapper>; \n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const SideBarWrapper = styled.div `\n  position: absolute;\n  width: 300px;\n  height: 100%;\n  background-color: ${props => props.theme.background};\n`;\n\nexport default function SideBar() {\n  return (<SideBarWrapper aria-label=\"Sidebar\">hello</SideBarWrapper>);\n}\n","export const CREATE = 'my-keep/notes/CREATE';\n\nexport const createNote = (payload) => ({\n  type: CREATE,\n  payload\n});\n\nconst defaultReducer = state => state;\n\nconst createNoteReducer = (state, action) => {\n  return state.concat(action.payload);\n};\n\nconst reducers = {\n  [CREATE]: createNoteReducer\n};\n\nconst noteReducers = (state = [], action) =>\n  (reducers[action.type] || defaultReducer)(state, action);\n\nexport default noteReducers;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdUndo, MdRedo } from 'react-icons/md';\n\nexport const IconWrapper = styled.div `\n  display: inline-flex;\n  color: ${props=> props.theme.textColor};\n  padding: 10px;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: .54;\n  \n  margin: 0px 5px;\n\n  &:hover {\n    opacity: 1;\n    background-color: ${props=> props.theme.secondaryBackground};\n  }\n`;\n\nexport const UndoIcon = (props) => <IconWrapper {...props}><MdUndo/></IconWrapper>;\nexport const RedoIcon = (props) => <IconWrapper {...props}><MdRedo/></IconWrapper>;\n\nexport const ActionButton = styled.button `\n  color: ${props=> props.theme.textColor};\n  background-color: ${props=> props.theme.background};\n  font-weight: bold;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border: none;\n  box-shadow:  none;\n  cursor: pointer;\n  outline: none;\n  opacity: .54;\n\n  ::-moz-focus-inner {\n     border: 0;\n  }\n\n  &:hover {\n    opacity: 1;\n    background-color: ${props=> props.theme.secondaryBackground};\n  }\n`;\n\n\n","import React, { useRef, useState, useImperativeHandle, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport {Editor, EditorState, convertToRaw} from 'draft-js';\nimport { UndoIcon, RedoIcon, ActionButton } from '../../styled';\n\nimport 'draft-js/dist/Draft.css';\n\nconst AddNoteWrapper = styled.div `\n  width: 600px;\n  background-color: ${props => props.theme.background};\n  box-shadow: ${props => props.theme.shadow};\n  margin: 0 auto;\n  padding: 15px;\n  border-radius: 5px;\n`;\n\nconst TitleInput = styled.input `\n  width: 100%;\n  border: none;\n  background-color: ${props => props.theme.background};\n  font-size: 1.1em;\n  color: ${props => props.theme.color};\n  padding-bottom: 20px;\n\n  &:focus {\n    ::placeholder {\n      color: ${props => props.theme.secondaryTextColor};\n    }\n  }\n  ::placeholder {\n    color: ${props => props.theme.textColor};\n  }\n`;\n\nconst Actions = styled.div `\n  flex-grow: 1;\n`;\n\nconst Footer = styled.div `\n  display: flex;\n  margin-top: 20px;\n`;\n\nfunction NoteEditor(props, ref) {\n  const {hideTitle, hideFooter, closeAction, onClick} = props;\n  const [editorState, setEditorState] = useState(\n    EditorState.createEmpty(),\n  );\n\n  const editor = useRef(null);\n  const wrapper = useRef(null);\n  const title = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    getNoteContent() {\n      const content = editorState.getCurrentContent();\n      const titleContent = title.current.value;\n      const update = {\n        title: titleContent  === \"\" ? undefined : titleContent,\n        content: content.hasText() ? convertToRaw(content) : undefined\n      };\n\n      return update;\n    },\n\n    clearContent() {\n      setEditorState(EditorState.createEmpty());\n      title.current.value = '';\n    },\n    element: wrapper.current\n  }));\n\n  const undo = () => {\n    setEditorState(EditorState.undo(editorState));\n  };\n\n  const redo = () => {\n    setEditorState(EditorState.redo(editorState));\n  };\n\n  return (\n    <AddNoteWrapper ref={wrapper} onClick={onClick}>\n      {hideTitle ? '' : <TitleInput placeholder=\"Title\" ref={title} aria-label=\"title\"/>}\n\n      <Editor\n        ref={editor}\n        ariaLabel=\"content\"\n        placeholder=\"Take a note...\"\n        editorState={editorState}\n        onChange={setEditorState}\n      />\n\n      {hideFooter ? '' :\n        <Footer>\n          <Actions aria-label=\"Actions\">\n            <UndoIcon onClick={undo} aria-label=\"Undo\"/>\n            <RedoIcon onClick={redo} aria-label=\"Redo\"/>\n          </Actions>\n          <ActionButton onClick={closeAction} aria-label=\"close\">Close</ActionButton>\n        </Footer>\n      }\n    </AddNoteWrapper>);\n}\n\nexport default forwardRef(NoteEditor);\n\n","import { connect } from 'react-redux';\nimport { createNote } from '../redux';\nimport NoteBox from '../components/NoteBox';\n\nconst mapStateToProps = (_state, props) => props;\n\nconst mapDispatchToProps = dispatch => ({\n  updateNote: payload => {\n    if (payload.title !== undefined || payload.content !== undefined)\n      dispatch(createNote(payload))\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoteBox);\n","import React, { useEffect, useRef, useState } from 'react';\nimport NoteEditor from './NoteEditor';\n\nexport default function AddNoteBox(props) {\n  const {updateNote} = props;\n  const [isFocused, setFocused] = useState(false);\n\n  const editorRef = useRef(null);\n\n  const close = (e) => {\n    if (e) {\n      e.stopPropagation();\n    }\n    updateNote(editorRef.current.getNoteContent());\n    editorRef.current.clearContent();\n    setFocused(false);\n  };\n\n  const handleClickOutsideWrapper = (event) => {\n    if (editorRef.current && !editorRef.current.element.contains(event.target) && isFocused) {\n      close();\n    }\n  };\n\n  const handleClick = () => {\n    setFocused(true);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutsideWrapper);\n    return () => { document.removeEventListener(\"mousedown\", handleClickOutsideWrapper) };\n  });\n\n  return (\n    <NoteEditor\n      ref={editorRef}\n      onClick={handleClick}\n      closeAction={close}\n      hideTitle={!isFocused}\n      hideFooter={!isFocused}\n    />\n  );\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport TakeANoteBox from '../../notes/containers/TakeANoteBox';\n\nexport const MainPaneWrapper = styled.div `\n  width: auto;\n  background-color: ${props => props.theme.background};\n  margin-top: 80px;\n  padding: 20px 10px;\n`;\n\nexport default function MainPane() {\n  return <MainPaneWrapper>\n    <TakeANoteBox/>\n  </MainPaneWrapper>; \n}\n","export default {\n  background: '#fff',\n  secondaryBackground: 'rgba(60,64,67,0.08)',\n  textColor: '#202124',\n  secondaryTextColor: '#80868b',\n  shadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\n  sidebarSize: '300px',\n}\n","import { combineReducers } from 'redux';\nimport notes from './notes/redux';\n\nexport default combineReducers({\n  notes\n});\n","import React, { useState } from 'react';\nimport { createStore } from 'redux';\nimport styled from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction';\n\nimport TopBar from './layout/components/TopBar';\nimport SideBar from './layout/components/SideBar';\nimport MainPane from './layout/components/MainPane';\nimport theme from './layout/theme';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(reducers, initialState, devToolsEnhancer());\n\n\nconst AppWrapper = styled.div `\n  height: 100%;\n  overflow: auto;\n`;\n\nconst MainPaneWrapper = styled.div `\n  width: auto;\n  height: 100%;\n  overflow: hidden;\n\n  @media(min-width: 750px) {\n    margin-left: ${props => props.isSidebarOpen ? '300px' : '0px'};\n  }\n`;\n\nfunction App() {\n  const [ isSidebarVisible, setSidebarVisible ] = useState(false);\n\n  const toggleSidebar = () => {\n    setSidebarVisible(!isSidebarVisible);\n  };\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <AppWrapper>\n          <TopBar onSidebarButtonClicked={toggleSidebar} />\n          { isSidebarVisible ? <SideBar /> : '' }\n          <MainPaneWrapper isSidebarOpen={isSidebarVisible}>\n            <MainPane/>\n          </MainPaneWrapper>\n        </AppWrapper>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nimport './reset.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}